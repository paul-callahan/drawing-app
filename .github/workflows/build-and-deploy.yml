name: Build and Deploy Drawing App

on:
  push:
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build web app
        run: npm run build:web

      - name: Upload web dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist

  # build-tauri:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install system dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y \
  #           libwebkit2gtk-4.1-dev \
  #           libgtk-4-dev \
  #           libayatana-appindicator3-dev \
  #           librsvg2-dev \
  #           libssl-dev \
  #           libgdk-pixbuf2.0-dev \
  #           libcairo2-dev \
  #           libpango1.0-dev \
  #           libatk1.0-dev \
  #           libgirepository1.0-dev \
  #           libglib2.0-dev

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18

  #     - name: Set up Rust
  #       uses: dtolnay/rust-toolchain@stable

  #     - name: Install Tauri CLI
  #       run: npm install -g @tauri-apps/cli

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Build Tauri app (macOS only)
  #       run: npm run tauri:build -- --target aarch64-apple-darwin

  #     - name: Upload Tauri dist as artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: tauri-dist
  #         path: src-tauri/target/aarch64-apple-darwin/release/bundle

  deploy-web:
    runs-on: ubuntu-latest
    needs: build-web
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download web dist
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  create-release:
    runs-on: ubuntu-latest
    needs: [build-web]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit short SHA
        id: get_commit_sha
        run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_commit_sha.outputs.sha_short }}
          release_name: Release ${{ steps.get_commit_sha.outputs.sha_short }}
          body: |
            Drawing App Release ${{ steps.get_commit_sha.outputs.sha_short }}
            
            ## Downloads
            - Web version available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
          draft: false
          prerelease: false 